{
    "env": {
        "browser": true // to include global variables(like document, window, etc)
    },
    "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
    "parserOptions": {
        "ecmaVersion": 2020, // Allows for the parsing of modern ECMAScript features
        "sourceType": "module", // Allows for the use of imports
        "ecmaFeatures": {
            "jsx": true // Allows for the parsing of JSX
        }
    },
    "plugins": [
        "prettier"
    ],
    "settings": {
        "react": {
            "version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
        },
        "import/resolver": { // resolve imports in this kind of case `export { default } from './Component`
            "node": {
                "extensions": [
                    ".js",
                    ".jsx",
                    ".ts",
                    ".tsx"
                ],
                "moduleDirectory": [
                    "node_modules",
                    "src/"
                ]
            }
        }
    },
    "extends": [
        "plugin:react/recommended", // Uses the recommended rules from @eslint-plugin-react
        "plugin:@typescript-eslint/recommended", // Uses the recommended rules from @typescript-eslint/eslint-plugin
        "airbnb",
        "airbnb/hooks", // enables the linting rules for React hooks
        "airbnb/whitespace", // only errors on whitespace rules and sets all other rules to warnings.
        "prettier", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
        "plugin:prettier/recommended" // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
    ],
    "rules": {
        "no-shadow": "off",
        "no-unused-variable": 0, // ignore variables starting with _ (underscore)
        "@typescript-eslint/no-shadow": [
            "error"
        ],
        "semi": "off",
        "@typescript-eslint/semi": "error",
        "@typescript-eslint/no-var-requires": 0,
        "import/prefer-default-export": "off", // resolves export { default as AvatarCard } from './AvatarCard'; when only default export in file
        "global-require": 0, // disable Unexpected require() eslint warning
        "react/jsx-filename-extension": [
            2,
            {
                "extensions": [
                    ".js",
                    ".jsx",
                    ".ts",
                    ".tsx"
                ]
            }
        ],
        "import/no-extraneous-dependencies": [
            "error",
            {
                "devDependencies": true
            }
        ],
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": [
            "error"
        ],
        "import/extensions": [ // to include extensions
            "error",
            "ignorePackages",
            {
                "js": "never",
                "jsx": "never",
                "ts": "never",
                "tsx": "never"
            }
        ]
    }
}